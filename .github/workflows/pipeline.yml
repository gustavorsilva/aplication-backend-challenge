name: CI/CD Pipeline

on:
  push:
    branches: [ feature/* ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checar o código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Instalar dependências
      run: |
        pip install -r requirements.txt      

    - name: Executar testes
      working-directory: ./test
      run: |
        pytest

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install

    - name: Configurar Credenciais AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

  build-and-push-ecr:
    name: Build e Push da Imagem Docker
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checar o código
        uses: actions/checkout@v3

      - name: Fazer login no Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Construir e enviar imagem Docker para ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f backendchallenge/Dockerfile backendchallenge/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

